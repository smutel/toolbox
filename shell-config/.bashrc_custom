
# Custom part

####################
#    VARIABLES     #
####################

SSH_ENV="$HOME/.ssh/environment"

####################
#     FUNCTIONS    #
####################

load_sshagent_env() {
  # shellcheck source=/dev/null
  . "${SSH_ENV}" > /dev/null
}

start_ssh_agent() {
  echo "Initializing new SSH agent..."
  ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo "succeeded"
  chmod 600 "${SSH_ENV}"
  load_sshagent_env
}

add_ssh_keys() {
  for f in "${HOME}"/.ssh/id_*.pub; do
    SSH_KEY_ID=$(awk '{ print $3 }' "$f")
    if ! ssh-add -l | grep "${SSH_KEY_ID}" > /dev/null; then
      ssh-add "${f%.*}"
    fi
  done
}

parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

####################
#       MAIN       #
####################

# Source global definitions
if [ -f /etc/bashrc ]; then
	# shellcheck source=/dev/null
  . /etc/bashrc
fi

# Source external .bashrc
if [ -f ~/.bashrc_external ]; then
	# shellcheck source=/dev/null
  . ~/.bashrc_external
fi

# Source bash completion
for i in ~/.bash_completion.d/*; do
	# shellcheck source=/dev/null
  . "$i"
done

# Start SSH agent
if [ -f "${SSH_ENV}" ]; then
  load_sshagent_env
  pgrep ssh-agent | grep -q "${SSH_AGENT_PID}" || {
    start_ssh_agent
  }
else
  start_ssh_agent
fi
add_ssh_keys

# Create some alias
if which vim > /dev/null; then
  alias vi='vim'
fi

if which makepasswd > /dev/null; then
  alias genpasswd='makepasswd --chars 20 --string=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-+,_'
fi

if which gpg-connect-agent > /dev/null; then
  alias forget='gpg-connect-agent reloadagent /bye'
fi

if which kubectl > /dev/null; then
  alias k='kubectl'
  complete -o default -F __start_kubectl k
  alias kcc="kubectl config get-contexts | grep '*'"
  alias kg='kubectl get'
  alias kga='kubectl get all --all-namespaces'
  alias kgp='kubectl get pods -o wide'
  alias kgs='kubectl get services'
  alias ksgp='kubectl get pods -n kube-system'
  alias kuc='kubectl config use-context'
fi

if which assume > /dev/null; then
  alias assume="source assume"
fi

if which aws_completer > /dev/null; then
  complete -C '/usr/local/bin/aws_completer' aws
fi

if which mise > /dev/null; then
  eval "$(mise activate bash)"
fi

if which direnv > /dev/null; then
  eval "$(direnv hook bash)"
fi

# Change shell prompt
export PS1="\u@\h \[\033[32m\]\W\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

# Change color of current terminal
export TERM=xterm-256color

# Add java to env variables
export JAVA_PATH=/opt/jdk
export PATH="${JAVA_PATH}/bin:${JAVA_PATH}/jre/bin:$PATH"

# Add go to env variables
export GO_PATH=/opt/go
export PATH="${GO_PATH}/bin:$PATH"

# Add ~/bin directory
export PATH="$HOME/bin:$PATH"

# Export tty for GPG
GPG_TTY=$(tty)
export GPG_TTY

# Disable the XON/XOFF feature
stty -ixon

# Start tmux
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  if [[ "$(pidof tmux)" == "" ]]; then
    exec tmux
  fi
fi
